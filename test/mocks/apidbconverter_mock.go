// Code generated by MockGen. DO NOT EDIT.
// Source: internal/pkg/db/apidbconvert/v1/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	automodel "github.com/FurmanovD/roommgr/internal/pkg/db/automodel"
	repository "github.com/FurmanovD/roommgr/internal/pkg/db/repository"
	v1 "github.com/FurmanovD/roommgr/pkg/api/v1"
	gomock "github.com/golang/mock/gomock"
)

// MockAPIDBConverter is a mock of APIDBConverter interface.
type MockAPIDBConverter struct {
	ctrl     *gomock.Controller
	recorder *MockAPIDBConverterMockRecorder
}

// MockAPIDBConverterMockRecorder is the mock recorder for MockAPIDBConverter.
type MockAPIDBConverterMockRecorder struct {
	mock *MockAPIDBConverter
}

// NewMockAPIDBConverter creates a new mock instance.
func NewMockAPIDBConverter(ctrl *gomock.Controller) *MockAPIDBConverter {
	mock := &MockAPIDBConverter{ctrl: ctrl}
	mock.recorder = &MockAPIDBConverterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIDBConverter) EXPECT() *MockAPIDBConverterMockRecorder {
	return m.recorder
}

// ToAPIReservation mocks base method.
func (m *MockAPIDBConverter) ToAPIReservation(reservationJoin *repository.ReservationJoinUserJoinRoom) *v1.Reservation {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToAPIReservation", reservationJoin)
	ret0, _ := ret[0].(*v1.Reservation)
	return ret0
}

// ToAPIReservation indicates an expected call of ToAPIReservation.
func (mr *MockAPIDBConverterMockRecorder) ToAPIReservation(reservationJoin interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToAPIReservation", reflect.TypeOf((*MockAPIDBConverter)(nil).ToAPIReservation), reservationJoin)
}

// ToAPIReservations mocks base method.
func (m *MockAPIDBConverter) ToAPIReservations(reservationJoins []*repository.ReservationJoinUserJoinRoom) v1.Reservations {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToAPIReservations", reservationJoins)
	ret0, _ := ret[0].(v1.Reservations)
	return ret0
}

// ToAPIReservations indicates an expected call of ToAPIReservations.
func (mr *MockAPIDBConverterMockRecorder) ToAPIReservations(reservationJoins interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToAPIReservations", reflect.TypeOf((*MockAPIDBConverter)(nil).ToAPIReservations), reservationJoins)
}

// ToAPIRoom mocks base method.
func (m *MockAPIDBConverter) ToAPIRoom(room *automodel.Room) *v1.Room {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToAPIRoom", room)
	ret0, _ := ret[0].(*v1.Room)
	return ret0
}

// ToAPIRoom indicates an expected call of ToAPIRoom.
func (mr *MockAPIDBConverterMockRecorder) ToAPIRoom(room interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToAPIRoom", reflect.TypeOf((*MockAPIDBConverter)(nil).ToAPIRoom), room)
}

// ToAPIRooms mocks base method.
func (m *MockAPIDBConverter) ToAPIRooms(rooms automodel.RoomSlice) v1.Rooms {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToAPIRooms", rooms)
	ret0, _ := ret[0].(v1.Rooms)
	return ret0
}

// ToAPIRooms indicates an expected call of ToAPIRooms.
func (mr *MockAPIDBConverterMockRecorder) ToAPIRooms(rooms interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToAPIRooms", reflect.TypeOf((*MockAPIDBConverter)(nil).ToAPIRooms), rooms)
}

// ToDBRoom mocks base method.
func (m *MockAPIDBConverter) ToDBRoom(room *v1.Room) *automodel.Room {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToDBRoom", room)
	ret0, _ := ret[0].(*automodel.Room)
	return ret0
}

// ToDBRoom indicates an expected call of ToDBRoom.
func (mr *MockAPIDBConverterMockRecorder) ToDBRoom(room interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToDBRoom", reflect.TypeOf((*MockAPIDBConverter)(nil).ToDBRoom), room)
}

// ToDBRooms mocks base method.
func (m *MockAPIDBConverter) ToDBRooms(rooms v1.Rooms) automodel.RoomSlice {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToDBRooms", rooms)
	ret0, _ := ret[0].(automodel.RoomSlice)
	return ret0
}

// ToDBRooms indicates an expected call of ToDBRooms.
func (mr *MockAPIDBConverterMockRecorder) ToDBRooms(rooms interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToDBRooms", reflect.TypeOf((*MockAPIDBConverter)(nil).ToDBRooms), rooms)
}
